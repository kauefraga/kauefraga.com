---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { formatDate } from '../../utils/format-date';

interface Props {
  post: CollectionEntry<'blog'>;
}

export async function getStaticPaths() {
  const posts = await getCollection('blog');

  const shouldIncludeDrafts = process.env.NODE_ENV === 'development';

  return posts
    .filter((post) => (shouldIncludeDrafts ? post : !post.data.draft))
    .map((post) => ({
      params: {
        slug: post.slug,
      },
      props: {
        post,
      },
    }));
}

const { data, render } = Astro.props.post;
const { Content } = await render();
---

<Layout title={data.title}>
  <article class="my-16 h-full max-w-4xl space-y-4 md:text-lg">
    <header>
      <h1 class="text-2xl font-bold text-violet-800 md:text-4xl">
        {data.title}
        {
          data.draft ? (
            <p class="text-lg font-normal text-zinc-400">(Rascunho)</p>
          ) : (
            ''
          )
        }
      </h1>
      <p>{formatDate(data.publishDate)}</p>
    </header>

    <Content />
  </article>
</Layout>

<style is:global>
  article pre {
    padding: 6px 12px;
    border-radius: 6px;
  }

  article code:not(pre code) {
    border-radius: 6px;
    padding: 2px 6px;
    background-color: rgb(194, 194, 194);
  }

  article ul {
    list-style-type: disc;
    list-style-position: inside;
  }

  article a {
    text-decoration: underline;
    color: rgb(91, 33, 182);
  }

  article a:visited {
    color: rgb(7, 89, 133);
  }
</style>
